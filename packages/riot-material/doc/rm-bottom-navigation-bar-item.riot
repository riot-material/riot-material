<rm-bottom-navigation-bar-item>
    <rm-button ripple-unbounded ripple-centered ripple-highlight="false" ripple-unbounded-focus style="margin-right: 0; border-radius: 0; width: 100%;">
        <rm-icon>{ isSelected() ? props.selectedIcon || props.icon : props.icon }</rm-icon>
        <div class="bottom-app-bar-caption{ isSelected() ? '': ' closed' }">{ props.label}</div>
    </rm-button>
    
    <style>
        .bottom-app-bar-caption {
            font-size: 12px;
            transition: font-size ease-in-out 150ms;
            text-transform: lowercase;
        }
        .bottom-app-bar-caption::first-letter {
            text-transform: uppercase;
        }
        .bottom-app-bar-caption.closed {
            font-size: 0;
        }
    </style>

    <script>
        export default {
            shouldUpdate(newProps, currentProps) {
                if (newProps.selected !== currentProps.selected) {
                    delete this.state.selected;
                }
            },
            isSelected() {
                return this.state.selected != null ?
                    this.state.selected !== false :
                    (this.props.selected != null && this.props.selected !== false)
                ;
            }
        }
    </script>
</rm-bottom-navigation-bar-item>