<test>
    <rm-textfield
        label="Label" ref="focusable"
        variant={ state.variant }
        disabled={ state.disabled }
        type="password"
    ></rm-textfield>
    <rm-button
        variant="icon"
        onclick={ () => update({ disabled: !state.disabled })}
    >{
        state.disabled ? "remove_circle" : "block"
    }</rm-button>
        <!--  onfocus={ console.log }
        onblur={ console.log }
        oninput={ console.log }  -->
    <rm-textfield full-width
        label="Label" variant="flat" placeholder="Placeholder"
        readonly={ state.readonly } ondblclick={ state.readonly && readonlyDblClick }
        variant={ state.variant }
    ></rm-textfield>

    <button onclick={ () => root.querySelector("[ref='focusable']").focus() }>FOCUS</button>
    <button onclick={ () => update({ readonly: true }) }>RESET READONLY</button>

    <div></div>
    <button onclick={ () => update({ variant: "flat" }) }>FLAT</button>
    <button onclick={ () => update({ variant: "filled" }) }>FILLED</button>
    <button onclick={ () => update({ variant: "outlined" }) }>OUTLINED</button>

    <script>
        export default {
            state: {
                disabled: false,
                readonly: true,
                variant: "flat"
            },
            readonlyDblClick(event) {
                console.log(event);
                const readonly = !this.state.readonly;
                this.update({ readonly });
                if (!readonly) {
                    event.currentTarget.focus();
                }
            }
        }
    </script>
</test>